FORMAT: 1A
HOST: https://snowman-challange-api.herokuapp.com

# Snowman Backend Challenge

API designed with REST architeture style to the Snowman Backend Challenge.  
This app allows users create and explore tourist spots on a map.

# Data Structures

## User (object)
+ id
+ username
+ password

## UserRegister (object)
+ id
+ username
+ password

## UserFAvorite (object)
+ id
+ id_tourist_spot
+ id_user


## UserAccessToken (object)
+ acesso_token

## TouristSpot (object)
+ id
+ name
+ gps
+ id_category

## Category (object)
+ id
+ name

## Commentary (object)
+ comment
+ id_tourist_spot
+ id_user

## Picture (object)



# User [/users]

### User List [GET]
+ Response 200 (application/json)

    + Attributes (array[User])

### User Register [POST /users/register]

+ Request

    + Headers
    
            Content-Type: application/json

    + Body

            {
                "username":"Usuario",
                "password":"54321"
            }
            
+ Response 201 (application/json)

    + Attributes (array[UserRegister])
    
    



### User Favorites [POST /users/{id}/favorites]
+ Parameters
      +  id (integer)
          
+ Request

    + Headers
    
            Content-Type: application/json
            
    + Body

            {
                "id_tourist_spot": 1,
                "id_user": 1
            }


+ Response 201 (application/json)

    + Attributes (array[UserRegister])
    
    
    
    
### User Access Token [POST /auth]
+ Request

    + Headers
    
            Content-Type: application/json

    + Body

            {
                "username":"claudio",
                "password":"snow"
            }

+ Response 201 (application/json)

    + Attributes (array[UserAccessToken])
    
    


# Tourist Spot [/tourist-spots]

### Tourist Spot Register [POST /tourist-spots]

+ Request

    + Headers
    
            Content-Type: application/json
    
            Authorization: JWT <paste_here_the_access_token>
    + Body

            {
                "name":"Nice Place",
                "gps":"(lati, long)",
                "id_category": 1
            }
+ Response 201 (application/json)

    + Attributes (array[TouristSpot])
    
    
### Tourist Spot List [GET]

+ Response 200 (application/json)

    + Attributes (array[TouristSpot])
    



### Tourist Spot Search by Name [GET /tourist-spots/{name}]
+ Parameters
      +  name (string)

+ Request

    + Headers
    
            Content-Type: application/json
    
            Authorization: JWT <paste_access_token_here>

+ Response 201 (application/json)

    + Attributes (array[TouristSpot])
    
    
    
### Add Comment [POST /tourist-spots/{_id}/comments]

+ Parameters
      +  _id (integer)
      
      
+ Request

    + Headers
    
            Content-Type: application/json
    
            Authorization: JWT <paste_access_token_here>
    + Body

            {
                "comment":"Awesome!!",
                "id_tourist_spot":1,
                "id_user":1
            }

+ Response 201 (application/json)

    + Attributes (array[Commentary])



### Show Comments [GET /tourist-spots/{_id}/comments]

+ Parameters
      +  _id (integer)
      
      
+ Request

    + Headers
    
            Content-Type: application/json

+ Response 201 (application/json)

    + Attributes (array[Commentary])
    
    

### Add Picture [POST /tourist-spots/{_id}/pictures]

+ Parameters
      +  _id (integer)
      
      
+ Request

    + Headers
    
            Content-Type: application/json
    
            Authorization: JWT <paste_access_token_here>
    + Body

            {
            "name": "foto do local",
            "img_link" : "www.fotodolocal.com",
            "id_tourist_spot": 1,
            "id_user": 1
            }

+ Response 201 (application/json)

    + Attributes (array[Picture])
    
    
    
    
### Show Pictures [GET /tourist-spots/{_id}/pictures]

+ Parameters
      +  _id (integer)
      
      
+ Request

    + Headers
    
            Content-Type: application/json

+ Response 201 (application/json)

    + Attributes (array[Picture])
    


# Category [/categories]

### Category List [GET]

+ Response 200 (application/json)

    + Attributes (array[Category])


### Category Registry [POST /categories]

+ Request

    + Headers
    
            Content-Type: application/json

    + Body

            {
                "name":"Mountain"
            }

+ Response 201 (application/json)

    + Attributes (array[Category])